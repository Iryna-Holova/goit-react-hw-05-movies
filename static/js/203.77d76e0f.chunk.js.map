{"version":3,"file":"static/js/203.77d76e0f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MovieDescription/MovieDescription.module.css?8aaf","components/MovieDescription/MovieDescription.jsx","pages/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ErrorMessage_message__7qeFy\",\"message_icon\":\"ErrorMessage_message_icon__ZlXVT\"};","import PropTypes from \"prop-types\";\nimport { ImSad2 } from 'react-icons/im';\nimport styles from \"./ErrorMessage.module.css\";\n\nconst ErrorMessage = ({message}) => {\n    return (\n      <div className={styles.message}>\n        <ImSad2 className={styles.message_icon} />\n        {message}\n      </div>\n    )\n}\n\nErrorMessage.propTypes = {\n    message: PropTypes.string,\n};\n\nexport default ErrorMessage;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\",\"spinner\":\"Loader_spinner__iDFIv\",\"icon-spin\":\"Loader_icon-spin__CrunX\"};","import { ImSpinner9 } from 'react-icons/im';\nimport styles from \"./Loader.module.css\";\n\nconst Loader = () => {\n    return (\n      <div className={styles.loader}>\n        <ImSpinner9 className={styles.spinner} />\n        Loading...\n      </div>\n    )\n}\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"back_btn\":\"MovieDescription_back_btn__cXXOj\",\"back_icon\":\"MovieDescription_back_icon__ZlMOj\",\"description_wrapper\":\"MovieDescription_description_wrapper__F4y-G\",\"description_image\":\"MovieDescription_description_image__xUskL\",\"description_info\":\"MovieDescription_description_info__PdiKy\",\"description_title\":\"MovieDescription_description_title__OYgTs\",\"description_type\":\"MovieDescription_description_type__mBfTi\",\"description_nav\":\"MovieDescription_description_nav__Csa+0\",\"description_link\":\"MovieDescription_description_link__pMfb1\",\"nav_button\":\"MovieDescription_nav_button__nNb+w\"};","import PropTypes from \"prop-types\";\nimport { NavLink, Outlet, useLocation } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport styles from \"./MovieDescription.module.css\";\nimport Loader from \"components/Loader/Loader\";\n\nconst MovieDescription = ({ movie, onBackBtn }) => {\n    const location = useLocation();\n\n    const {\n        poster_path,\n        title,\n        release_date,\n        vote_average,\n        overview,\n        genres\n    } = movie;\n\n    const moviePoster = (poster_path) => {\n        if (poster_path) {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n        } else return 'https://ranobehub.org/img/ranobe/posters/default.jpg'\n    }\n\n    return (\n        <>\n            <button className={styles.back_btn} onClick={onBackBtn} type=\"button\"><IoIosArrowBack className={styles.back_icon} /> Go back</button>\n            <div className={styles.description_wrapper}>\n                <img className={styles.description_image} src={moviePoster(poster_path)} alt={title} />\n                <div className={styles.description_info}>\n                    <h2 className={styles.description_title}>{title} ({release_date.substring(0, 4)})</h2>\n                    <p>User Score: {Math.round(vote_average / 10 * 100)}%</p>\n                    <h3 className={styles.description_type}>Overview</h3>\n                    <p>{overview || 'no overview'}</p>\n                    <h3 className={styles.description_type}>Genres</h3>\n                    <p>{genres.map(genre => genre.name).join(', ') || 'no genres'}</p>\n                </div>\n            </div>\n            <nav className={styles.description_nav}>\n                <NavLink className={styles.description_link} to=\"cast\" state={location.state}>Cast</NavLink>\n                <NavLink className={styles.description_link} to=\"reviews\" state={location.state}>Reviews</NavLink>\n            </nav>\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n        </>\n    )\n};\n\nMovieDescription.propTypes = {\n    movie: PropTypes.object.isRequired,\n    onBackBtn: PropTypes.func.isRequired,\n};\n\nexport default MovieDescription;","import { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { fetchMovieByID } from \"services/fetchMovies\";\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\nimport Loader from \"components/Loader/Loader\";\nimport MovieDescription from \"components/MovieDescription/MovieDescription\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        setIsLoading(true);\n        setError('')\n        fetchMovieByID(movieId)\n            .then((data) => {\n                setMovie(data);\n            })\n            .catch(error => {\n                setError(error.message);\n                navigate(\"/\");\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [movieId, navigate]);\n\n    const handleBackBtn = () => {\n        navigate(location?.state?.from ?? \"/\");\n    };\n\n    return (\n        <>\n            {movie && <MovieDescription movie={movie} onBackBtn={handleBackBtn} />}\n            {isLoading && <Loader />}\n            {error && <ErrorMessage message={error}/>}\n        </>\n    )\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8b67a89c3b3cf87de76d1484537ca872';\naxios.defaults.baseURL = URL;\n\nexport async function fetchTrendingMovies(page) {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n    return response.data;\n};\n    \nexport async function fetchMoviesByName(query, page) {\n    const searchParams = new URLSearchParams({\n        language: 'en-US',\n        page,\n        include_adult: false,\n    });\n\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&${searchParams}`);\n    return response.data;\n};\n\nexport async function fetchMovieByID(movieID) {\n    const response = await axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport async function fetchMovieCast(movieID) {\n    const response = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport async function fetchMovieReviews(movieID) {\n    const response = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n    return response.data;\n}"],"names":["message","className","styles","movie","onBackBtn","location","useLocation","poster_path","title","release_date","vote_average","overview","genres","onClick","type","src","moviePoster","alt","substring","Math","round","map","genre","name","join","to","state","Suspense","fallback","Loader","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","navigate","useNavigate","useEffect","fetchMovieByID","then","data","catch","finally","from","ErrorMessage","API_KEY","fetchTrendingMovies","page","axios","response","fetchMoviesByName","query","searchParams","URLSearchParams","language","include_adult","movieID","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}