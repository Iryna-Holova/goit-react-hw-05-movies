{"version":3,"file":"static/js/600.b8d75166.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/CastInfo/CastInfo.module.css?0a17","components/CastInfo/CastInfo.jsx","pages/Cast.jsx","services/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ErrorMessage_message__7qeFy\",\"message_icon\":\"ErrorMessage_message_icon__ZlXVT\"};","import PropTypes from \"prop-types\";\nimport { ImSad2 } from 'react-icons/im';\nimport styles from \"./ErrorMessage.module.css\";\n\nconst ErrorMessage = ({message}) => {\n    return (\n      <div className={styles.message}>\n        <ImSad2 className={styles.message_icon} />\n        {message}\n      </div>\n    )\n}\n\nErrorMessage.propTypes = {\n    message: PropTypes.string,\n};\n\nexport default ErrorMessage;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\",\"spinner\":\"Loader_spinner__iDFIv\",\"icon-spin\":\"Loader_icon-spin__CrunX\"};","import { ImSpinner9 } from 'react-icons/im';\nimport styles from \"./Loader.module.css\";\n\nconst Loader = () => {\n    return (\n      <div className={styles.loader}>\n        <ImSpinner9 className={styles.spinner} />\n        Loading...\n      </div>\n    )\n}\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"CastInfo_cast_list__GJGNb\",\"cast_item\":\"CastInfo_cast_item__4A8OR\",\"cast_poster\":\"CastInfo_cast_poster__eQhuq\",\"cast_character\":\"CastInfo_cast_character__VLQ4s\"};","import PropTypes from \"prop-types\";\nimport styles from \"./CastInfo.module.css\";\n\nconst CastInfo = ({ cast }) => {\n    const actorPoster = (profile_path) => {\n        if (profile_path) {\n            return `https://image.tmdb.org/t/p/w500${profile_path}`;\n        } else return 'https://ranobehub.org/img/ranobe/posters/default.jpg'\n    }\n\n    return (\n        <ul className={styles.cast_list}>\n            {cast.map(({id, profile_path, name, character }) => {\n                return (\n                    <li key={id} className={styles.cast_item}>\n                        <img className={styles.cast_poster} src={actorPoster(profile_path)} alt={name}></img>\n                        <h3>{name}</h3>\n                        {character && <p className={styles.cast_character}>Character: {character}</p>}\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nCastInfo.propTypes = {\n    cast: PropTypes.array.isRequired,\n};\n\nexport default CastInfo;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCast } from \"services/fetchMovies\";\nimport CastInfo from \"components/CastInfo/CastInfo\";\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\nimport Loader from \"components/Loader/Loader\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        setIsLoading(true);\n        setError('')\n\n        fetchMovieCast(movieId)\n            .then(({cast}) => {\n                setCast(cast);\n                if (cast.length === 0) {\n                    setError(\"We don't have any cast for this movie\")\n                };\n            })\n            .catch(error => setError(error))\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [movieId]);\n\n    return (\n        <>\n            {cast && <CastInfo cast={cast} />}\n            {isLoading && <Loader />}\n            {error && <ErrorMessage message={error}/>}\n        </>\n    )\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8b67a89c3b3cf87de76d1484537ca872';\naxios.defaults.baseURL = URL;\n\nexport async function fetchTrendingMovies(page) {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n    return response.data;\n};\n    \nexport async function fetchMoviesByName(query, page) {\n    const searchParams = new URLSearchParams({\n        language: 'en-US',\n        page,\n        include_adult: false,\n    });\n\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&${searchParams}`);\n    return response.data;\n};\n\nexport async function fetchMovieByID(movieID) {\n    const response = await axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport async function fetchMovieCast(movieID) {\n    const response = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport async function fetchMovieReviews(movieID) {\n    const response = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n    return response.data;\n}"],"names":["message","className","styles","cast","actorPoster","profile_path","map","id","name","character","src","alt","movieId","useParams","useState","setCast","isLoading","setIsLoading","error","setError","useEffect","fetchMovieCast","then","length","catch","finally","Loader","ErrorMessage","API_KEY","fetchTrendingMovies","page","axios","response","data","fetchMoviesByName","query","searchParams","URLSearchParams","language","include_adult","fetchMovieByID","movieID","fetchMovieReviews"],"sourceRoot":""}