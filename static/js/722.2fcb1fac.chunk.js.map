{"version":3,"file":"static/js/722.2fcb1fac.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/PageNavButtons/PageNavButtons.module.css?cafa","components/PageNavButtons/PageNavButtons.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ErrorMessage_message__7qeFy\",\"message_icon\":\"ErrorMessage_message_icon__ZlXVT\"};","import PropTypes from \"prop-types\";\nimport { ImSad2 } from 'react-icons/im';\nimport styles from \"./ErrorMessage.module.css\";\n\nconst ErrorMessage = ({message}) => {\n    return (\n      <div className={styles.message}>\n        <ImSad2 className={styles.message_icon} />\n        {message}\n      </div>\n    )\n}\n\nErrorMessage.propTypes = {\n    message: PropTypes.string,\n};\n\nexport default ErrorMessage;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\",\"spinner\":\"Loader_spinner__iDFIv\",\"icon-spin\":\"Loader_icon-spin__CrunX\"};","import { ImSpinner9 } from 'react-icons/im';\nimport styles from \"./Loader.module.css\";\n\nconst Loader = () => {\n    return (\n      <div className={styles.loader}>\n        <ImSpinner9 className={styles.spinner} />\n        Loading...\n      </div>\n    )\n}\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MovieItem_movie__FIDz9\",\"movie_poster\":\"MovieItem_movie_poster__SO+XG\",\"movie_title\":\"MovieItem_movie_title__WS4Cj\"};","import PropTypes from \"prop-types\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styles from \"./MovieItem.module.css\";\n\nconst MovieItem = ({ movies }) => {\n    const location = useLocation();\n\n    const moviePoster = (poster_path) => {\n        if (poster_path) {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n        } else return 'https://ranobehub.org/img/ranobe/posters/default.jpg'\n        \n\n    }\n    return (\n        <>\n            {movies.map(({ id, title, poster_path }) => {\n                return <li className={styles.movie} key={id}>\n                    <Link to={`/movies/${id}`} state={{ from: location }}>\n                        <img className={styles.movie_poster} src={moviePoster(poster_path)} alt={title} />\n                        <h2 className={styles.movie_title}>{title}</h2>\n                    </Link>\n                </li>\n            })}\n        </>\n    )\n};\n\nMovieItem.propTypes = {\n    movies: PropTypes.array.isRequired,\n};\n\nexport default MovieItem;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieList_title__QyMtJ\",\"movie_list\":\"MovieList_movie_list__IWl2j\"};","import PropTypes from \"prop-types\";\nimport MovieItem from \"components/MovieItem/MovieItem\";\nimport styles from \"./MovieList.module.css\";\n\n\nconst MovieList = ({ title, movies }) => {\n\n    return (\n        <>\n            <h1 className={styles.title}>{title}</h1>\n            <ul className={styles.movie_list}>\n                <MovieItem movies={movies}/>\n            </ul>\n        </>\n    )\n};\n\nMovieList.propTypes = {\n    title: PropTypes.string,\n    movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"page_container\":\"PageNavButtons_page_container__3Fp8B\",\"page_nav\":\"PageNavButtons_page_nav__TzD45\"};","import PropTypes from \"prop-types\";\nimport { IoIosArrowRoundBack, IoIosArrowRoundForward } from \"react-icons/io\";\nimport styles from \"./PageNavButtons.module.css\";\n\nconst PageNavButtons = ({ onPageUp, onPageDown, currentPage, totalPages }) => {\n    return (\n        <div className={styles.page_container}>\n            <button\n                disabled={(currentPage === 1) && true}\n                className={styles.page_nav}\n                type=\"button\"\n                onClick={onPageDown}>\n                <IoIosArrowRoundBack />\n            </button>\n            <div>{currentPage}</div>\n            <button\n                disabled={(currentPage === totalPages) && true}\n                className={styles.page_nav}\n                type=\"button\"\n                onClick={onPageUp}>\n                <IoIosArrowRoundForward />\n            </button>\n        </div>\n    );\n};\n\nPageNavButtons.propTypes = {\n    onPageUp: PropTypes.func.isRequired,\n    onPageDown: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    totalPages: PropTypes.number.isRequired,\n};\n   \nexport default PageNavButtons;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"form_button\":\"SearchForm_form_button__lRXO-\"};","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport styles from \"./SearchForm.module.css\";\n\nconst SearchForm = ({onSubmit}) => {\n    const [value, setValue] = useState('')\n\n    const handleInputChange = event => {\n        setValue(event.currentTarget.value);\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setValue('');\n\n        if (value.trim() === '') {\n            alert('Please enter search query');\n        } else onSubmit(value);\n    }\n\n    return (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            <input\n                className={styles.input}\n                type=\"text\"\n                value={value}\n                onChange={handleInputChange}\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n            />\n            <button type=\"submit\" className={styles.form_button}><MdSearch/></button>\n        </form>\n    )\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { animateScroll as scroll } from 'react-scroll';\nimport { fetchMoviesByName } from \"services/fetchMovies\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport PageNavButtons from \"components/PageNavButtons/PageNavButtons\";\nimport Loader from \"components/Loader/Loader\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [searchQuery, setSearchQuery] = useState(searchParams.get('query') ||'')\n    const [page, setPage] = useState(() => (Number(searchParams.get('page')) || 1));\n    const [totalPages, setTotalPages] = useState(0)\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (!searchQuery) return;\n        scroll.scrollToTop();\n        setIsLoading(true);\n        setError('')\n        fetchMoviesByName(searchQuery, page)\n            .then(({ results, total_pages }) => {\n                setMovies(results);\n                setTotalPages(total_pages);\n    \n                if (total_pages === 0) setError('No movies found');\n            })\n            .catch(error => setError(error.message))\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [page, searchQuery]);\n\n    const handleFormSubmit = newQuery => {\n        if (newQuery === searchQuery) return;\n\n        setSearchParams({\n            query: newQuery,\n            page: 1\n        })\n        setSearchQuery(newQuery);\n        setPage(1);\n    }\n\n    const incrementPage = () => {\n        setPage(prevPage => prevPage + 1);\n        setSearchParams({\n            query: searchQuery,\n            page: (page + 1),\n        })\n    }\n\n    const decrementPage = () => {\n        setPage(prevPage => prevPage - 1);\n        setSearchParams({\n            query: searchQuery,\n            page: (page - 1),\n        })\n    }\n\n    return (\n        <>\n            <SearchForm onSubmit={handleFormSubmit}/>\n            <MovieList movies={movies} />\n            {error && <ErrorMessage message={error} />}\n            {isLoading && <Loader/>}\n            {(totalPages > 0) && <PageNavButtons\n                onPageUp={incrementPage}\n                onPageDown={decrementPage}\n                currentPage={page}\n                totalPages={totalPages}\n            />}\n        </>\n    )\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8b67a89c3b3cf87de76d1484537ca872';\naxios.defaults.baseURL = URL;\n\nexport async function fetchTrendingMovies(page) {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n    return response.data;\n};\n    \nexport async function fetchMoviesByName(query, page) {\n    const searchParams = new URLSearchParams({\n        language: 'en-US',\n        page,\n        include_adult: false,\n    });\n\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&${searchParams}`);\n    return response.data;\n};\n\nexport async function fetchMovieByID(movieID) {\n    const response = await axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport async function fetchMovieCast(movieID) {\n    const response = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport async function fetchMovieReviews(movieID) {\n    const response = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}`);\n    return response.data;\n}"],"names":["message","className","styles","movies","location","useLocation","moviePoster","poster_path","map","id","title","to","state","from","src","alt","onPageUp","onPageDown","currentPage","totalPages","disabled","type","onClick","onSubmit","useState","value","setValue","event","preventDefault","trim","alert","onChange","currentTarget","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","get","searchQuery","setSearchQuery","Number","page","setPage","setTotalPages","setMovies","isLoading","setIsLoading","error","setError","useEffect","scroll","fetchMoviesByName","then","results","total_pages","catch","finally","newQuery","query","MovieList","ErrorMessage","Loader","PageNavButtons","prevPage","API_KEY","fetchTrendingMovies","axios","response","data","URLSearchParams","language","include_adult","fetchMovieByID","movieID","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}